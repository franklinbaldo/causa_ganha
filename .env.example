# CausaGanha Environment Configuration

# =============================================================================
# GEMINI API CONFIGURATION
# =============================================================================
# Required: Google Gemini API key for PDF content extraction
# Get your API key from: https://ai.google.dev/
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# INTERNET ARCHIVE CONFIGURATION
# =============================================================================
# Required: Internet Archive credentials for PDF archival
# Get your keys from: https://archive.org/account/s3.php
IA_ACCESS_KEY=your_ia_access_key_here
IA_SECRET_KEY=your_ia_secret_key_here

# =============================================================================
# PIPELINE CONFIGURATION
# =============================================================================
# Maximum concurrent downloads from TJRO (default: 3)
# Lower values are more respectful to TJRO servers
MAX_CONCURRENT_DOWNLOADS=3

# Maximum concurrent uploads to Internet Archive (default: 2)
# IA has rate limits, so keep this conservative
MAX_CONCURRENT_IA_UPLOADS=2

# Try direct upload to IA first (true/false, default: true)
# Set to false if TJRO consistently blocks IA servers
TRY_DIRECT_UPLOAD=true

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Environment: development, production
ENV=development

# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Data directory for local storage (default: data)
DATA_DIR=data

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env
# 2. Fill in your actual API keys and configuration
# 3. Add .env to your .gitignore (already included)
# 4. Source the environment: export $(cat .env | xargs)
# 5. Or use python-dotenv to load automatically
#
# Required for basic functionality:
# - GEMINI_API_KEY (for PDF extraction)
#
# Required for Internet Archive upload:
# - IA_ACCESS_KEY (for archival)
# - IA_SECRET_KEY (for archival)
#
# Optional pipeline tuning:
# - MAX_CONCURRENT_DOWNLOADS
# - MAX_CONCURRENT_IA_UPLOADS  
# - TRY_DIRECT_UPLOAD
# - LOG_LEVEL
# - DATA_DIR

# =============================================================================
# ASYNC PIPELINE USAGE
# =============================================================================
# Process all 5,058 diarios (will take several hours):
# uv run python src/async_diario_pipeline.py
#
# Test with limited items:
# uv run python src/async_diario_pipeline.py --max-items 10
#
# Process specific year:
# uv run python src/async_diario_pipeline.py --start-date 2025-01-01 --end-date 2025-12-31
#
# Resume interrupted processing:
# uv run python src/async_diario_pipeline.py --resume
#
# Check processing statistics:
# uv run python src/async_diario_pipeline.py --stats-only
#
# Force local download (skip direct upload):
# uv run python src/async_diario_pipeline.py --no-direct-upload

# =============================================================================
# INTERNET ARCHIVE DISCOVERY
# =============================================================================
# List uploaded diarios:
# uv run python src/ia_discovery.py --year 2025
#
# Coverage report:
# uv run python src/ia_discovery.py --coverage-report
#
# Export inventory:
# uv run python src/ia_discovery.py --export inventory.json