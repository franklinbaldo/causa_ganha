name: Daily CausaGanha Pipeline

on:
  workflow_dispatch:
    inputs:
      date:
        description: 'YYYY-MM-DD (default: yesterday)'
        required: false
        type: string
  schedule:
    - cron: '15 3 * * *'

env:
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  IA_ACCESS_KEY: ${{ secrets.IA_ACCESS_KEY }}
  IA_SECRET_KEY: ${{ secrets.IA_SECRET_KEY }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_R2_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
  CLOUDFLARE_R2_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
  CLOUDFLARE_R2_BUCKET: ${{ secrets.CLOUDFLARE_R2_BUCKET }}

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Determine date
        id: date
        run: |
          if [ -n "${{ inputs.date }}" ]; then
            echo "date=${{ inputs.date }}" >> "$GITHUB_OUTPUT"
          else
            echo "date=$(date -d 'yesterday' +%Y-%m-%d)" >> "$GITHUB_OUTPUT"
          fi

      - name: Collect
        id: collect
        run: |
          DATE=${{ steps.date.outputs.date }}
          uv run python src/downloader.py --date "$DATE"
          echo "pdf_path=data/dj_${DATE//-/}.pdf" >> "$GITHUB_OUTPUT"

      - name: Archive
        run: uv run python src/pipeline.py archive --date ${{ steps.date.outputs.date }}

      - name: Extract
        run: uv run python src/extractor.py --pdf_file ${{ steps.collect.outputs.pdf_path }}

      - name: Update ratings
        run: uv run python src/pipeline.py update

      - name: Backup
        run: uv run python src/r2_storage.py backup

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: causaganha-${{ steps.date.outputs.date }}
          path: |
            data/dj_*.pdf
            data/*_extraction.json
            data/causaganha.duckdb
          retention-days: 14
