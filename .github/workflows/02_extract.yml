name: 02 - PDF Content Extraction

on:
  workflow_dispatch: # Allows manual triggering
  # Future: could be triggered by completion of 01_collect.yml
  # workflow_run:
  #   workflows: ["01 - Daily PDF Collection"]
  #   types:
  #     - completed

jobs:
  extract_content:
    runs-on: ubuntu-latest
    # if: github.event.workflow_run.conclusion == 'success' # Use if triggered by workflow_run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync

      # Placeholder for downloading artifact from 01_collect.yml
      # For now, we'll assume a PDF is available or create a dummy one to process.
      # In a real scenario, you'd use actions/download-artifact here.
      # Example:
      # - name: Download PDF artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: diario-pdf-${{ needs.get_date.outputs.TODAY }} # Name must match upload
      #     path: causaganha/data/diarios/downloaded_pdf/

      - name: Prepare dummy PDF for extraction (if no artifact download)
        id: prepare_pdf
        run: |
          PDF_DIR="causaganha/data/diarios"
          PDF_NAME="workflow_test_extract.pdf"
          PDF_PATH="${PDF_DIR}/${PDF_NAME}"
          mkdir -p $PDF_DIR
          if [ ! -f "$PDF_PATH" ]; then
            echo "This is a dummy PDF for 02_extract.yml workflow testing." > $PDF_PATH
            echo "Dummy PDF created at ${PDF_PATH}"
          fi
          echo "pdf_file_path=${PDF_PATH}" >> $GITHUB_OUTPUT

      - name: Run extractor script
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY_PLACEHOLDER }} # IMPORTANT: Use a real secret name later
        run: |
          JSON_OUTPUT_DIR="causaganha/data/json_workflow_output"
          mkdir -p $JSON_OUTPUT_DIR
          uv run python causaganha/core/extractor.py             --pdf_file ${{ steps.prepare_pdf.outputs.pdf_file_path }}             --output_dir $JSON_OUTPUT_DIR
          echo "JSON_DIR=${JSON_OUTPUT_DIR}" >> $GITHUB_ENV # Make dir available to other steps

      - name: List output JSON files
        run: |
          echo "Extracted JSON files in ${{ env.JSON_DIR }}:"
          ls -l ${{ env.JSON_DIR }}

      - name: Upload extracted JSON
        if: always() # Try to upload even if previous steps failed, for debugging
        uses: actions/upload-artifact@v4
        with:
          name: extracted-json-output
          path: ${{ env.JSON_DIR }}/*.json # Upload all json files from the output dir
          if-no-files-found: warn # Don't fail if no JSON produced, just warn

# Notes for future:
# 1. GEMINI_API_KEY: The secret `GEMINI_API_KEY_PLACEHOLDER` needs to be created in the GitHub repository settings
#    (Settings > Secrets and variables > Actions > New repository secret) and populated with a real Gemini API Key.
#    The name used here should be updated to the actual secret name.
# 2. Artifact Passing: To make this workflow consume artifacts from `01_collect.yml`,
#    the `download-artifact` step needs to be correctly configured with the artifact name
#    produced by `01_collect.yml`. The `workflow_run` trigger would also be enabled.
# 3. Parallel Processing: If multiple PDFs are processed, the workflow might need adjustments
#    for parallel extraction or handling multiple output files (e.g., using a matrix strategy).
